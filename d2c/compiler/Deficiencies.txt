$Header: /scm/cvs/src/d2c/compiler/Deficiencies.txt,v 1.5 2004/09/15 05:06:42 housel Exp $

		Known Deficiencies in the D2C Compiler.

For an up-to-date list of known problems with d2c and Gwydion Dylan in
general, see

http://www.gwydiondylan.org/limitations.phtml

or browse the Bugzilla database at

http://www.gwydiondylan.org/cgi-bin/bugzilla/index.cgi

The special syntax for aref, element, and singleton is supposed to
look up the name in the context of the operation.  Instead, we always
look it up in the Dylan library.


In macro property list patterns, the key default must be either a
literal constant or a variable reference instead of any kind of
expression as the DRM claims or a basic-fragment as Moon suggests.


The ``for'' macro is supposed to evaluate the types interleaved with
the init expressions, but it does not.  In fact, in some cases, it
will evaluate the type expression each time though the loop.


Anything involving the runtime creation of classes is not supported.
This means that the expressions in all class superclass lists must
obviously be compile-time constants.


Violations of ``define sealed domain'' are not detected.

